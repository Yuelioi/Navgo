syntax = "v1"

type AnyRequest {}

type Model {
	ID        uint   `json:"-" gorm:"primarykey"`
	CreatedAt string `json:"-"`
	UpdatedAt string `json:"-"`
}

type IDRequest {
	ID int `json:"id"`
}

type IDResponse {
	ID int `json:"id"`
}

type Category {
	Model
	CID   string `json:"cid,optional" gorm:"column:cid"`
	Depth int    `json:"depth,optional"`
	Title string `json:"title"`
	Order int    `json:"order,optional"`
	Path  string `json:"path,optional" gorm:"column:path;unique"`
}

type Collection {
	Model
	CID         string    `json:"cid,optional" gorm:"column:cid"`
	Title       string    `json:"title"`
	Link        string    `json:"link"`
	Order       int       `json:"order,optional" gorm:"column:order"`
	Path        string    `json:"path,optional" gorm:"column:path;unique"`
	Proxy       bool      `json:"proxy,optional" gorm:"column:proxy"`
	CategoryID  string    `json:"-" gorm:"column:category_id;index"` // 外键字段
	Category    *Category `json:"category" gorm:"foreignKey:CategoryID;references:ID"`
	Description string    `json:"description,optional"`
	Thumbnail   string    `json:"thumbnail,optional"`
	Tags        []string  `json:"tags,optional" gorm:"type:json"`
	View        int       `json:"view,optional"`
}

// 所有分类
type CollectionsData {
	Category *Category `json:"category"` // 使用 inline 标签将 Category 字段内联
	Groups   []*Group  `json:"groups"`
}

// 一个子分类
type Group {
	Category    *Category     `json:"category" yaml:",inline"` // 使用 inline 标签将 Category 字段内联
	Collections []*Collection `json:"collections"`
}

type CollectionsResponse {
	Datas []*CollectionsData `json:"datas"`
}