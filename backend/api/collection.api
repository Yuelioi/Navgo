syntax = "v1"

import "./base.api"

// 所有分类
type CollectionsData {
	Category *Category `json:"category"`
	Groups   []*Group  `json:"groups"`
}

// 一个子分类
type Group {
	Category    *Category     `json:"category" yaml:",inline"` // 使用 inline 标签将 Category 字段内联
	Collections []*Collection `json:"collections"`
}

type CollectionsDataResponse {
	Datas []*CollectionsData `json:"datas"`
}

type CollectionUpdateParams {
	CID          string   `form:"cid,optional"`
	Title        string   `form:"title"`
	Link         string   `form:"link"`
	Description  string   `form:"description,optional"`
	CategoryPath string   `form:"category_path,omitempty"`
	Tags         []string `form:"tags,optional,omitempty"`
}

type CollectionFilter {
	Keyword    string   `json:"keyword,optional"`
	Categories []string `json:"categories,optional"`
	Page       int      `json:"page,optional,default=1"`
	PageSize   int      `json:"page_size,optional,default=20"`
}

type Nav {
	CID       string `json:"cid,optional"`
	Title     string `json:"title"`
	FullTitle string `json:"full_title"`
	Order     int    `json:"order,optional"`
	Path      string `json:"path,optional,omitempty" gorm:"column:path;unique"`
	Children  []Nav  `json:"children,optional"`
}

type NavsResponse {
	Navs []*Nav `json:"navs"`
}

@server (
	prefix: /v1
	group: collection
)

service main {
	@doc "页面集合"
	@handler Navs
	get /navs returns (NavsResponse)

	@doc "页面集合"
	@handler Collections
	get /collections  returns (CollectionsDataResponse)

	@doc "分页集合"
	@handler FilteredCollections
	post /filteredCollections (CollectionFilter) returns (CollectionsResponse)

	@doc "单页面"
	@handler Collection
	get /collection/:id  returns (Collection)

	@doc "增加页面"
	@handler AddCollection
	post /collection (CollectionUpdateParams) returns (Collection)

}

@server (
	prefix: /v1
	group: collection
	jwt: Auth
)

service main {

	@doc "删除页面"
	@handler DeleteCollection
	delete /collection (IDRequest) returns (Collection)

	@doc "更新页面"
	@handler UpdateCollection
	put /collection (CollectionUpdateParams) returns (Collection)

}